{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar modeToString = require('../lib/mode-to-string.js');\n\nvar parseMtime = require('../lib/parse-mtime.js');\n\nvar configure = require('../lib/configure.js');\n\nvar multipartRequest = require('ipfs-core-utils/multipart-request');\n\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\n\nvar abortSignal = require('../lib/abort-signal.js');\n\nvar nativeAbortController = require('native-abort-controller');\n\nconst createWrite = configure.configure(api => {\n  async function write(path, input, options = {}) {\n    const controller = new nativeAbortController.AbortController();\n    const signal = abortSignal.abortSignal(controller.signal, options.signal);\n    const res = await api.post('files/write', {\n      signal,\n      searchParams: toUrlSearchParams.toUrlSearchParams({\n        arg: path,\n        streamChannels: true,\n        count: options.length,\n        ...options\n      }),\n      ...(await multipartRequest.multipartRequest([{\n        content: input,\n        path: 'arg',\n        mode: modeToString.modeToString(options.mode),\n        mtime: parseMtime.parseMtime(options.mtime)\n      }], controller, options.headers))\n    });\n    await res.text();\n  }\n\n  return write;\n});\nexports.createWrite = createWrite;","map":null,"metadata":{},"sourceType":"script"}