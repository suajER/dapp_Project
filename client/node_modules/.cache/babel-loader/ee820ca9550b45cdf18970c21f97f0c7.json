{"ast":null,"code":"import _slicedToArray from \"D:\\\\reactDAPP\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\reactDAPP\\\\client\\\\src\\\\dashComponents\\\\Tender.js\";\nimport React, { useState } from 'react';\nimport { PdfUpload } from 'react-ipfs-uploader';\nimport 'semantic-ui-css';\n\nconst Tender = props => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        pdfUrl = _useState2[0],\n        setPdfUrl = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        target = _useState4[0],\n        setTarget = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        min = _useState6[0],\n        setMin = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        alertMsg = _useState8[0],\n        setmsg = _useState8[1];\n\n  const changeHandler = e => {\n    setTarget(e.target.value);\n    setMin(e.target.value);\n  };\n\n  const submitHandler = async () => {\n    alert('Are you sure to deploy your tender ?');\n    await props.contract.methods.registerTender(target, min, pdfUrl).send({\n      from: props.account\n    });\n    setTarget(\" \");\n    setMin(\" \");\n    setmsg(true);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"ui container center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \" Tender GENERATION\"), React.createElement(\"form\", {\n    className: \"ui form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Target\"), React.createElement(\"input\", {\n    type: \"number\",\n    name: \"Target\",\n    placeholder: \"Target\",\n    onChange: changeHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Minimum Contribution\"), React.createElement(\"input\", {\n    type: \"number\",\n    name: \"Minimum Contribution\",\n    placeholder: \"Minimum Contribution\",\n    onChange: changeHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }))), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Upload Your Protocol Pdf\"), React.createElement(PdfUpload, {\n    setUrl: setPdfUrl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"ui button blue\",\n    onClick: submitHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Create Tender\"), alertMsg ? React.createElement(\"div\", {\n    class: \"ui success message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    class: \"close icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Your user registration was successful.\")) : console.log(''));\n};\n\nexport default Tender;","map":{"version":3,"sources":["D:/reactDAPP/client/src/dashComponents/Tender.js"],"names":["React","useState","PdfUpload","Tender","props","pdfUrl","setPdfUrl","target","setTarget","min","setMin","alertMsg","setmsg","changeHandler","e","value","submitHandler","alert","contract","methods","registerTender","send","from","account","console","log"],"mappings":"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","sourcesContent":["\r\nimport React, { useState } from 'react';\r\nimport { PdfUpload } from 'react-ipfs-uploader';\r\nimport 'semantic-ui-css'\r\n\r\n\r\n const Tender=(props) =>{\r\n  const [pdfUrl, setPdfUrl] = useState('')\r\n  const [target, setTarget] = useState('')\r\n  const [min, setMin] = useState('')\r\n  const [alertMsg, setmsg] = useState(false)\r\n  \r\n\r\n \r\n  const changeHandler=(e)=>{\r\n    setTarget(e.target.value);\r\n    setMin(e.target.value);\r\n  }\r\n\r\n  const submitHandler = async() => {\r\n    alert('Are you sure to deploy your tender ?');\r\n    await props.contract.methods.registerTender(target,min,pdfUrl).send({from:props.account})\r\n    setTarget(\" \");\r\n    setMin(\" \");\r\n    setmsg(true)\r\n\r\n  }\r\n  return (\r\n    <div className=\"ui container center\">\r\n      <h2> Tender GENERATION</h2>\r\n      <form className=\"ui form\">\r\n      \r\n        <div className=\"field\">\r\n          <label>Target</label>\r\n          <input type=\"number\" name=\"Target\" placeholder=\"Target\" onChange={changeHandler}></input>\r\n        </div>\r\n        <div className=\"field\">\r\n          <label>Minimum Contribution</label>\r\n          <input type=\"number\" name=\"Minimum Contribution\" placeholder=\"Minimum Contribution\" onChange={changeHandler}></input>\r\n        </div>\r\n      </form>\r\n      <p>Upload Your Protocol Pdf</p>\r\n      <PdfUpload setUrl={setPdfUrl} />\r\n      <button className='ui button blue' onClick={submitHandler}>Create Tender</button>\r\n        {\r\n           alertMsg?\r\n            <div class=\"ui success message\">\r\n            <i class=\"close icon\"></i>\r\n             <p>Your user registration was successful.</p>\r\n             </div>\r\n             :\r\n             console.log('')\r\n\r\n   \r\n         }\r\n         </div>\r\n  \r\n  );\r\n}\r\nexport default Tender\r\n"]},"metadata":{},"sourceType":"module"}