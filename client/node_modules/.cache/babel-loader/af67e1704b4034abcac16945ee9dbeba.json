{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\DELL\\\\Desktop\\\\CS-dapp\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\CS-dapp\\\\client\\\\src\\\\components\\\\ShowRequest.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Table, Button, Input, Segment } from 'semantic-ui-react';\nimport TransactionRow from './TransactionRow';\nimport '../App.css';\n\nconst ShowRequest = props => {\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        current = _useState2[0],\n        setCurrent = _useState2[1]; //dummy state\n\n\n  const datas = JSON.parse(localStorage.getItem(\"info\" || \"[]\"));\n\n  const initialInfo = async () => {\n    let f = await props.contract.methods.getreqNo().call();\n    const info = await Promise.all(Array(parseInt(f)).fill().map((element, index) => {\n      return props.contract.methods.getRequeststatus(index).call();\n    }));\n    localStorage.setItem(\"info\", JSON.stringify(info));\n  };\n\n  useEffect(() => {\n    console.log(\"inside useeffect\");\n    initialInfo();\n    handler();\n  });\n  useEffect(() => {\n    console.log(\"inside useeffect\");\n    initialInfo();\n    handler();\n  }, [props.refresh]);\n\n  const handler = () => {\n    setTimeout(() => {\n      setCurrent(!current);\n    }, 1000);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"ui container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, current, console.log(\"render\"), React.createElement(Table, {\n    compact: true,\n    celled: true,\n    definition: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Table.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Table.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Request_NO\"), React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Creator\"), React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Description:\"), React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Amount:\"), React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Recipient:\"), React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Voters/Donors\"), React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Payment Completed\"))), React.createElement(Table.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(TransactionRow, {\n    account: props.account,\n    contract: props.contract,\n    web3: props.web3,\n    hadnler: handler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }))));\n};\n\nexport default ShowRequest;","map":{"version":3,"sources":["C:/Users/DELL/Desktop/CS-dapp/client/src/components/ShowRequest.js"],"names":["React","useState","useEffect","useRef","Table","Button","Input","Segment","TransactionRow","ShowRequest","props","current","setCurrent","datas","JSON","parse","localStorage","getItem","initialInfo","f","contract","methods","getreqNo","call","info","Promise","all","Array","parseInt","fill","map","element","index","getRequeststatus","setItem","stringify","console","log","handler","refresh","setTimeout","account","web3"],"mappings":"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","sourcesContent":["import React,{ useState,useEffect, useRef} from 'react'\r\nimport { Table,Button,Input,Segment} from 'semantic-ui-react';\r\nimport TransactionRow from './TransactionRow';\r\nimport '../App.css' \r\n\r\n\r\n\r\n\r\nconst ShowRequest=(props)=> {\r\n  const[current,setCurrent]=useState(0) //dummy state\r\n   const datas=JSON.parse(localStorage.getItem(\"info\" || \"[]\"))\r\n\r\n  const initialInfo=async()=>{\r\n\r\n  let f=await props.contract.methods.getreqNo().call()\r\n  const info = await Promise.all(\r\n    Array(parseInt(f)).fill().map((element, index) => {\r\n        return props.contract.methods.getRequeststatus(index).call();\r\n      })\r\n  )\r\nlocalStorage.setItem(\"info\",JSON.stringify(info))\r\n\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n\r\n      console.log(\"inside useeffect\")\r\n      initialInfo();\r\n      handler();\r\n      \r\n    })\r\n\r\n  useEffect(()=>{\r\n\r\n    console.log(\"inside useeffect\")\r\n    initialInfo();\r\n    handler();\r\n    \r\n  },[props.refresh])\r\n  \r\n\r\nconst handler=()=>{\r\n  setTimeout(()=>{\r\n    setCurrent(!current)\r\n  },1000)\r\n}\r\n\r\n  return (\r\n    <div className=\"ui container\">\r\n      {current}\r\n      {console.log(\"render\")}\r\n    <Table compact celled definition>\r\n  <Table.Header>\r\n    <Table.Row>\r\n      <Table.HeaderCell />\r\n      <Table.HeaderCell>Request_NO</Table.HeaderCell>\r\n      <Table.HeaderCell>Creator</Table.HeaderCell>\r\n      <Table.HeaderCell>Description:</Table.HeaderCell>\r\n      <Table.HeaderCell>Amount:</Table.HeaderCell>\r\n      <Table.HeaderCell>Recipient:</Table.HeaderCell>\r\n      <Table.HeaderCell>Voters/Donors</Table.HeaderCell>\r\n      <Table.HeaderCell>Payment Completed</Table.HeaderCell>\r\n     \r\n    </Table.Row>\r\n  </Table.Header>\r\n\r\n  <Table.Body>\r\n    \r\n  <TransactionRow\r\n         account={props.account}\r\n         contract={props.contract}\r\n         web3={props.web3}\r\n         hadnler={handler}\r\n         />\r\n  </Table.Body>\r\n\r\n   \r\n\r\n  \r\n  \r\n  </Table>\r\n  \r\n\r\n </div> \r\n  )\r\n}\r\nexport default ShowRequest"]},"metadata":{},"sourceType":"module"}