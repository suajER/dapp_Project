{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar cid = require('multiformats/cid');\n\nvar multipartRequest = require('ipfs-core-utils/multipart-request');\n\nvar configure = require('../lib/configure.js');\n\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\n\nvar abortSignal = require('../lib/abort-signal.js');\n\nconst createPut = configure.configure(api => {\n  async function put(data, options = {}) {\n    const controller = new AbortController();\n    const signal = abortSignal.abortSignal(controller.signal, options.signal);\n    let res;\n\n    try {\n      const response = await api.post('block/put', {\n        signal: signal,\n        searchParams: toUrlSearchParams.toUrlSearchParams(options),\n        ...(await multipartRequest.multipartRequest([data], controller, options.headers))\n      });\n      res = await response.json();\n    } catch (err) {\n      if (options.format === 'dag-pb') {\n        return put(data, { ...options,\n          format: 'protobuf'\n        });\n      } else if (options.format === 'dag-cbor') {\n        return put(data, { ...options,\n          format: 'cbor'\n        });\n      }\n\n      throw err;\n    }\n\n    return cid.CID.parse(res.Key);\n  }\n\n  return put;\n});\nexports.createPut = createPut;","map":null,"metadata":{},"sourceType":"script"}