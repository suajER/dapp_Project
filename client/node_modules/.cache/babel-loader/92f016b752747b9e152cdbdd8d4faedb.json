{"ast":null,"code":"import _slicedToArray from \"D:\\\\test\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\test\\\\client\\\\src\\\\dashComponents\\\\Tender.js\";\nimport React, { useState } from 'react';\nimport { PdfUpload } from 'react-ipfs-uploader';\nimport swal from 'sweetalert';\n\nconst Tender = props => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        pdfUrl = _useState2[0],\n        setPdfUrl = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        target = _useState4[0],\n        setTarget = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        min = _useState6[0],\n        setMin = _useState6[1];\n\n  const submitHandler = async () => {\n    alert('Are you sure to deploy your tender ?');\n    const targetinWEI = props.web3.utils.toWei(target);\n    const mininWEI = props.web3.utils.toWei(min);\n    await props.contract.methods.registerTender(targetinWEI, mininWEI, pdfUrl).send({\n      from: props.account[0]\n    });\n    swal({\n      title: \"Good job!\",\n      text: \"successfuly created!\",\n      icon: \"success\",\n      button: \"Continue To Website\"\n    });\n    setMin(\" \");\n    setTarget(\" \");\n  };\n\n  return React.createElement(\"div\", {\n    className: \"ui container center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, console.log(props.contract), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \" Tender GENERATION\"), React.createElement(\"form\", {\n    className: \"ui form\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Target(ETH)\"), React.createElement(\"input\", {\n    type: \"number\",\n    name: \"Target\",\n    placeholder: \"Target\",\n    onChange: e => setTarget(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Minimum Contribution(ETH)\"), React.createElement(\"input\", {\n    type: \"number\",\n    name: \"Minimum Contribution\",\n    placeholder: \"Minimum Contribution\",\n    onChange: e => setMin(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }))), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Upload Your Protocol Pdf\"), React.createElement(PdfUpload, {\n    setUrl: setPdfUrl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"ui button blue\",\n    onClick: submitHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Create Tender\"), console.log(\"account=\", props.account));\n};\n\nexport default Tender;","map":{"version":3,"sources":["D:/test/client/src/dashComponents/Tender.js"],"names":["React","useState","PdfUpload","swal","Tender","props","pdfUrl","setPdfUrl","target","setTarget","min","setMin","submitHandler","alert","targetinWEI","web3","utils","toWei","mininWEI","contract","methods","registerTender","send","from","account","title","text","icon","button","console","log","e","value"],"mappings":"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","sourcesContent":["\r\nimport React, { useState } from 'react';\r\nimport { PdfUpload } from 'react-ipfs-uploader';\r\nimport swal from 'sweetalert';\r\n\r\n\r\n\r\n\r\n const Tender=(props) =>{\r\n  const [pdfUrl, setPdfUrl] = useState('')\r\n  const [target, setTarget] = useState('')\r\n  const [min, setMin] = useState('')\r\n  \r\n\r\n\r\n  const submitHandler = async() => {\r\n    alert('Are you sure to deploy your tender ?');\r\n    const targetinWEI=props.web3.utils.toWei(target);\r\n    const mininWEI=props.web3.utils.toWei(min);\r\n    await props.contract.methods.registerTender(targetinWEI,mininWEI,pdfUrl).send({from:props.account[0]})\r\n    swal({\r\n      title: \"Good job!\",\r\n      text: \"successfuly created!\",\r\n      icon: \"success\",\r\n      button: \"Continue To Website\",\r\n    });\r\n    setMin(\" \")\r\n    setTarget(\" \")\r\n  \r\n\r\n  }\r\n  return (\r\n    <div className=\"ui container center\">\r\n      {console.log(props.contract)}\r\n      <h2> Tender GENERATION</h2>\r\n      <form className=\"ui form\" type='submit'>\r\n      \r\n        <div className=\"field\">\r\n          <label>Target(ETH)</label>\r\n          <input type=\"number\" name=\"Target\" placeholder=\"Target\" onChange={(e) => setTarget(e.target.value)}></input>\r\n        </div>\r\n        <div className=\"field\">\r\n          <label>Minimum Contribution(ETH)</label>\r\n          <input type=\"number\" name=\"Minimum Contribution\" placeholder=\"Minimum Contribution\" onChange={(e) => setMin(e.target.value)}></input>\r\n        </div>\r\n      </form>\r\n      <p>Upload Your Protocol Pdf</p>\r\n      <PdfUpload setUrl={setPdfUrl} />\r\n      <button className='ui button blue' onClick={submitHandler} >Create Tender</button>\r\n      {console.log(\"account=\",props.account)}\r\n\r\n        \r\n         </div>\r\n  \r\n  );\r\n}\r\nexport default Tender\r\n"]},"metadata":{},"sourceType":"module"}