{"ast":null,"code":"import * as React from 'react';\nimport { useContext } from 'react';\nimport classNames from 'classnames';\nimport AccordionContext, { isAccordionItemSelected } from './AccordionContext';\nimport AccordionItemContext from './AccordionItemContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useAccordionButton(eventKey, onClick) {\n  const _useContext = useContext(AccordionContext),\n        activeEventKey = _useContext.activeEventKey,\n        onSelect = _useContext.onSelect,\n        alwaysOpen = _useContext.alwaysOpen;\n\n  return e => {\n    /*\r\n      Compare the event key in context with the given event key.\r\n      If they are the same, then collapse the component.\r\n    */\n    let eventKeyPassed = eventKey === activeEventKey ? null : eventKey;\n\n    if (alwaysOpen) {\n      if (Array.isArray(activeEventKey)) {\n        if (activeEventKey.includes(eventKey)) {\n          eventKeyPassed = activeEventKey.filter(k => k !== eventKey);\n        } else {\n          eventKeyPassed = [...activeEventKey, eventKey];\n        }\n      } else {\n        // activeEventKey is undefined.\n        eventKeyPassed = [eventKey];\n      }\n    }\n\n    onSelect == null ? void 0 : onSelect(eventKeyPassed, e);\n    onClick == null ? void 0 : onClick(e);\n  };\n}\nconst AccordionButton =\n/*#__PURE__*/\nReact.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'button',\n  bsPrefix,\n  className,\n  onClick,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-button');\n\n  const _useContext2 = useContext(AccordionItemContext),\n        eventKey = _useContext2.eventKey;\n\n  const accordionOnClick = useAccordionButton(eventKey, onClick);\n\n  const _useContext3 = useContext(AccordionContext),\n        activeEventKey = _useContext3.activeEventKey;\n\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n\n  return (\n    /*#__PURE__*/\n    _jsx(Component, {\n      ref: ref,\n      onClick: accordionOnClick,\n      ...props,\n      \"aria-expanded\": eventKey === activeEventKey,\n      className: classNames(className, bsPrefix, !isAccordionItemSelected(activeEventKey, eventKey) && 'collapsed')\n    })\n  );\n});\nAccordionButton.displayName = 'AccordionButton';\nexport default AccordionButton;","map":null,"metadata":{},"sourceType":"module"}