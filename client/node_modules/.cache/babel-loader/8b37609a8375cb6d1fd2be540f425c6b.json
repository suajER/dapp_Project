{"ast":null,"code":"const SignData = async (username, accountAddress, web3) => {\n  let signedData;\n  await web3.eth.personal.sign(username, accountAddress, (err, signature) => {\n    if (err) {\n      signedData = err;\n    } else {\n      signedData = web3.eth.accounts.hashMessage(signature);\n    }\n  });\n  return signedData;\n};\n\nexport default SignData;","map":{"version":3,"sources":["D:/test/client/src/utils/SignData.js"],"names":["SignData","username","accountAddress","web3","signedData","eth","personal","sign","err","signature","accounts","hashMessage"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,EAAiCC,IAAjC,KAA0C;AACvD,MAAIC,UAAJ;AAEA,QAAMD,IAAI,CAACE,GAAL,CAASC,QAAT,CAAkBC,IAAlB,CACFN,QADE,EAEFC,cAFE,EAGF,CAACM,GAAD,EAAMC,SAAN,KAAoB;AAChB,QAAID,GAAJ,EAAS;AACLJ,MAAAA,UAAU,GAAGI,GAAb;AACH,KAFD,MAEO;AACHJ,MAAAA,UAAU,GAAGD,IAAI,CAACE,GAAL,CAASK,QAAT,CAAkBC,WAAlB,CAA8BF,SAA9B,CAAb;AACH;AACJ,GATC,CAAN;AAYA,SAAOL,UAAP;AACH,CAhBD;;AAkBA,eAAeJ,QAAf","sourcesContent":["const SignData = async (username, accountAddress, web3) => {\r\n    let signedData;\r\n\r\n    await web3.eth.personal.sign(\r\n        username,\r\n        accountAddress,\r\n        (err, signature) => {\r\n            if (err) {\r\n                signedData = err;\r\n            } else {\r\n                signedData = web3.eth.accounts.hashMessage(signature);\r\n            }\r\n        }\r\n    );\r\n\r\n    return signedData;\r\n}\r\n\r\nexport default SignData;"]},"metadata":{},"sourceType":"module"}