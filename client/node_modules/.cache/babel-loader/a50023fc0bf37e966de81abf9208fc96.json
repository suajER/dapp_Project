{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar cid = require('multiformats/cid');\n\nvar configure = require('../lib/configure.js');\n\nvar normaliseInput = require('ipfs-core-utils/pins/normalise-input');\n\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\n\nconst createAddAll = configure.configure(api => {\n  async function* addAll(source, options = {}) {\n    for await (const _ref of normaliseInput.normaliseInput(source)) {\n      const path = _ref.path;\n      const recursive = _ref.recursive;\n      const metadata = _ref.metadata;\n      const res = await api.post('pin/add', {\n        signal: options.signal,\n        searchParams: toUrlSearchParams.toUrlSearchParams({ ...options,\n          arg: path,\n          recursive,\n          metadata: metadata ? JSON.stringify(metadata) : undefined,\n          stream: true\n        }),\n        headers: options.headers\n      });\n\n      for await (const pin of res.ndjson()) {\n        if (pin.Pins) {\n          for (const cid$1 of pin.Pins) {\n            yield cid.CID.parse(cid$1);\n          }\n\n          continue;\n        }\n\n        yield cid.CID.parse(pin);\n      }\n    }\n  }\n\n  return addAll;\n});\nexports.createAddAll = createAddAll;","map":null,"metadata":{},"sourceType":"script"}