{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar cid = require('multiformats/cid');\n\nvar configure = require('../lib/configure.js');\n\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\n\nfunction toPin(type, cid$1, metadata) {\n  const pin = {\n    type,\n    cid: cid.CID.parse(cid$1)\n  };\n\n  if (metadata) {\n    pin.metadata = metadata;\n  }\n\n  return pin;\n}\n\nconst createLs = configure.configure(api => {\n  async function* ls(options = {}) {\n    let paths = [];\n\n    if (options.paths) {\n      paths = Array.isArray(options.paths) ? options.paths : [options.paths];\n    }\n\n    const res = await api.post('pin/ls', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams.toUrlSearchParams({ ...options,\n        arg: paths.map(path => \"\".concat(path)),\n        stream: true\n      }),\n      headers: options.headers\n    });\n\n    for await (const pin of res.ndjson()) {\n      if (pin.Keys) {\n        for (const cid of Object.keys(pin.Keys)) {\n          yield toPin(pin.Keys[cid].Type, cid, pin.Keys[cid].Metadata);\n        }\n\n        return;\n      }\n\n      yield toPin(pin.Type, pin.Cid, pin.Metadata);\n    }\n  }\n\n  return ls;\n});\nexports.createLs = createLs;","map":null,"metadata":{},"sourceType":"script"}