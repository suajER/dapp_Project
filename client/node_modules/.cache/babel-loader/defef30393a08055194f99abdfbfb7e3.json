{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar cid = require('multiformats/cid');\n\nvar errCode = require('err-code');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nvar errCode__default =\n/*#__PURE__*/\n_interopDefaultLegacy(errCode);\n\nasync function* resolve(cid$1, path, codecs, getBlock, options) {\n  const load = async cid => {\n    const codec = await codecs.getCodec(cid.code);\n    const block = await getBlock(cid, options);\n    return codec.decode(block);\n  };\n\n  const parts = path.split('/').filter(Boolean);\n  let value = await load(cid$1);\n  let lastCid = cid$1;\n\n  if (!parts.length) {\n    yield {\n      value,\n      remainderPath: ''\n    };\n  }\n\n  while (parts.length) {\n    const key = parts.shift();\n\n    if (!key) {\n      throw errCode__default[\"default\"](new Error(\"Could not resolve path \\\"\".concat(path, \"\\\"\")), 'ERR_INVALID_PATH');\n    }\n\n    if (Object.prototype.hasOwnProperty.call(value, key)) {\n      value = value[key];\n      yield {\n        value,\n        remainderPath: parts.join('/')\n      };\n    } else {\n      throw errCode__default[\"default\"](new Error(\"no link named \\\"\".concat(key, \"\\\" under \").concat(lastCid)), 'ERR_NO_LINK');\n    }\n\n    const cid$1 = cid.CID.asCID(value);\n\n    if (cid$1) {\n      lastCid = cid$1;\n      value = await load(value);\n    }\n  }\n}\n\nexports.resolve = resolve;","map":null,"metadata":{},"sourceType":"script"}