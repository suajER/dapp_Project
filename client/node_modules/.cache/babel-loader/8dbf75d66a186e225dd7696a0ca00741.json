{"ast":null,"code":"import _objectWithoutProperties from \"C:\\\\Users\\\\DELL\\\\Desktop\\\\CS-dapp\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport Anchor from '@restart/ui/Anchor';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Fade from './Fade';\nimport CloseButton from './CloseButton';\nimport divWithClassName from './divWithClassName';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst DivStyledAsH4 = divWithClassName('h4');\nDivStyledAsH4.displayName = 'DivStyledAsH4';\nconst AlertHeading = createWithBsPrefix('alert-heading', {\n  Component: DivStyledAsH4\n});\nconst AlertLink = createWithBsPrefix('alert-link', {\n  Component: Anchor\n});\nconst defaultProps = {\n  variant: 'primary',\n  show: true,\n  transition: Fade,\n  closeLabel: 'Close alert'\n};\nconst Alert =\n/*#__PURE__*/\nReact.forwardRef((uncontrolledProps, ref) => {\n  const _useUncontrolled = useUncontrolled(uncontrolledProps, {\n    show: 'onClose'\n  }),\n        bsPrefix = _useUncontrolled.bsPrefix,\n        show = _useUncontrolled.show,\n        closeLabel = _useUncontrolled.closeLabel,\n        closeVariant = _useUncontrolled.closeVariant,\n        className = _useUncontrolled.className,\n        children = _useUncontrolled.children,\n        variant = _useUncontrolled.variant,\n        onClose = _useUncontrolled.onClose,\n        dismissible = _useUncontrolled.dismissible,\n        transition = _useUncontrolled.transition,\n        props = _objectWithoutProperties(_useUncontrolled, [\"bsPrefix\", \"show\", \"closeLabel\", \"closeVariant\", \"className\", \"children\", \"variant\", \"onClose\", \"dismissible\", \"transition\"]);\n\n  const prefix = useBootstrapPrefix(bsPrefix, 'alert');\n  const handleClose = useEventCallback(e => {\n    if (onClose) {\n      onClose(false, e);\n    }\n  });\n  const Transition = transition === true ? Fade : transition;\n\n  const alert =\n  /*#__PURE__*/\n  _jsxs(\"div\", {\n    role: \"alert\",\n    ...(!Transition ? props : undefined),\n    ref: ref,\n    className: classNames(className, prefix, variant && \"\".concat(prefix, \"-\").concat(variant), dismissible && \"\".concat(prefix, \"-dismissible\")),\n    children: [dismissible &&\n    /*#__PURE__*/\n    _jsx(CloseButton, {\n      onClick: handleClose,\n      \"aria-label\": closeLabel,\n      variant: closeVariant\n    }), children]\n  });\n\n  if (!Transition) return show ? alert : null;\n  return (\n    /*#__PURE__*/\n    _jsx(Transition, {\n      unmountOnExit: true,\n      ...props,\n      ref: undefined,\n      in: show,\n      children: alert\n    })\n  );\n});\nAlert.displayName = 'Alert';\nAlert.defaultProps = defaultProps;\nexport default Object.assign(Alert, {\n  Link: AlertLink,\n  Heading: AlertHeading\n});","map":null,"metadata":{},"sourceType":"module"}