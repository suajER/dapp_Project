{"ast":null,"code":"import classNames from 'classnames';\nimport * as React from 'react';\nimport { ENTERED, ENTERING, EXITING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport TransitionWrapper from './TransitionWrapper';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false\n};\nconst transitionStyles = {\n  [ENTERING]: 'show',\n  [ENTERED]: 'show'\n};\nconst OffcanvasToggling =\n/*#__PURE__*/\nReact.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas');\n  return (\n    /*#__PURE__*/\n    _jsx(TransitionWrapper, {\n      ref: ref,\n      addEndListener: transitionEndListener,\n      ...props,\n      childRef: children.ref,\n      children: (status, innerProps) =>\n      /*#__PURE__*/\n      React.cloneElement(children, { ...innerProps,\n        className: classNames(className, children.props.className, (status === ENTERING || status === EXITING) && \"\".concat(bsPrefix, \"-toggling\"), transitionStyles[status])\n      })\n    })\n  );\n});\nOffcanvasToggling.defaultProps = defaultProps;\nOffcanvasToggling.displayName = 'OffcanvasToggling';\nexport default OffcanvasToggling;","map":null,"metadata":{},"sourceType":"module"}