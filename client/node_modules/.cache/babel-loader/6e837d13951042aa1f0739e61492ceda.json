{"ast":null,"code":"import _slicedToArray from \"D:\\\\test\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\test\\\\client\\\\src\\\\dashComponents\\\\TenderLogs.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Card } from 'semantic-ui-react';\nimport { NavLink, BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport TenderStatus from '../components/TenderStatus';\nexport default function TenderLogs(props) {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        dvalue = _useState2[0],\n        setdValue = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        refresh = _useState4[0],\n        setRefresh = _useState4[1];\n\n  const clickHandler = async () => {\n    await props.contract.methods.donate().send({\n      from: props.account,\n      value: props.web3.utils.toWei(dvalue, 'ether')\n    });\n  };\n\n  refresh = () => {\n    setRefresh(true);\n  };\n\n  console.log('inside tednrlg');\n  return React.createElement(\"div\", {\n    className: \"ui container center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Tenders:\"), React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Card.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(Card.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, props.address), React.createElement(Card.Meta, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Deployed Tender Address\"), React.createElement(\"nav\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Card.Description, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Amount:\"), React.createElement(\"input\", {\n    type: \"number\",\n    labelPosition: \"right\",\n    placeholder: \"Amount\",\n    onChange: e => setdValue(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"ui button green\",\n    onClick: refresh,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Donate\")))), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  })), React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/tenderlog/tenderstatus\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(TenderStatus, {\n    contract: props.contract,\n    account: props.account,\n    web3: props.web3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  })))));\n}","map":{"version":3,"sources":["D:/test/client/src/dashComponents/TenderLogs.js"],"names":["React","useState","useEffect","Card","NavLink","BrowserRouter","Router","Route","Switch","TenderStatus","TenderLogs","props","dvalue","setdValue","refresh","setRefresh","clickHandler","contract","methods","donate","send","from","account","value","web3","utils","toWei","console","log","address","e","target"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAAQC,OAAR,EAAgBC,aAAa,IAAIC,MAAjC,EAAwCC,KAAxC,EAA8CC,MAA9C,QAA2D,kBAA3D;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AAEA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA,oBAEhBV,QAAQ,CAAC,EAAD,CAFQ;AAAA;AAAA,QAElCW,MAFkC;AAAA,QAE3BC,SAF2B;;AAAA,qBAGdZ,QAAQ,CAAC,KAAD,CAHM;AAAA;AAAA,QAGlCa,OAHkC;AAAA,QAG1BC,UAH0B;;AAKxC,QAAMC,YAAY,GAAG,YAAU;AAC7B,UAAML,KAAK,CAACM,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,GAAgCC,IAAhC,CACJ;AAACC,MAAAA,IAAI,EAAGV,KAAK,CAACW,OAAd;AAAsBC,MAAAA,KAAK,EAACZ,KAAK,CAACa,IAAN,CAAWC,KAAX,CAAiBC,KAAjB,CAAuBd,MAAvB,EAA8B,OAA9B;AAA5B,KADI,CAAN;AAED,GAHD;;AAKAE,EAAAA,OAAO,GAAC,MAAK;AACXC,IAAAA,UAAU,CAAC,IAAD,CAAV;AACD,GAFD;;AAIDY,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACC,SACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACD,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcjB,KAAK,CAACkB,OAApB,CADF,EAEE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD,CAAM,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADH,EAEG;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,aAAa,EAAC,OAAnC;AAA2C,IAAA,WAAW,EAAC,QAAvD;AAAgE,IAAA,QAAQ,EAAGC,CAAD,IAAOjB,SAAS,CAACiB,CAAC,CAACC,MAAF,CAASR,KAAV,CAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFH,EAKC;AAAQ,IAAA,SAAS,EAAC,iBAAlB;AAAoC,IAAA,OAAO,EAAET,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALD,CADA,CAHF,CADC,EAkBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBE,CADD,EAuBF,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,yBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAEE,IAAA,QAAQ,EAAEH,KAAK,CAACM,QAFlB;AAGE,IAAA,OAAO,EAAEN,KAAK,CAACW,OAHjB;AAIE,IAAA,IAAI,EAAEX,KAAK,CAACa,IAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADA,CAvBE,CAFF,CADF;AAyCD","sourcesContent":["import React, { useState ,useEffect} from 'react'\r\nimport { Card } from 'semantic-ui-react'\r\nimport {NavLink,BrowserRouter as Router,Route,Switch} from 'react-router-dom'\r\nimport TenderStatus from '../components/TenderStatus'\r\n\r\nexport default function TenderLogs(props) {\r\n\r\n  const[dvalue,setdValue]=useState('')\r\n  const[refresh,setRefresh]=useState(false)\r\n\r\n  const clickHandler = async ()=>{\r\n    await props.contract.methods.donate().send(\r\n      {from : props.account,value:props.web3.utils.toWei(dvalue,'ether')})\r\n  }\r\n  \r\n  refresh=() =>{\r\n    setRefresh(true)\r\n  }\r\n   \r\n console.log('inside tednrlg')\r\n  return (\r\n    <div className='ui container center'>\r\n      <h1>Tenders:</h1>\r\n      <Router>\r\n       <Card>\r\n      <Card.Content>\r\n        <Card.Header>{props.address}</Card.Header>\r\n        <Card.Meta>Deployed Tender Address</Card.Meta>\r\n        <nav>\r\n        <Card.Description>\r\n           <label>Amount:</label>\r\n           <input type=\"number\" labelPosition=\"right\" placeholder='Amount' onChange={(e) => setdValue(e.target.value)}></input>\r\n            \r\n        \r\n         <button className='ui button green' onClick={refresh} \r\n         >Donate</button>\r\n         \r\n        \r\n        </Card.Description>\r\n        \r\n        </nav>\r\n      </Card.Content>\r\n     <button></button>\r\n    </Card>\r\n    \r\n\r\n    <Switch>\r\n    <Route exact path=\"/tenderlog/tenderstatus\">\r\n      <TenderStatus\r\n        \r\n        contract={props.contract}\r\n        account={props.account}\r\n        web3={props.web3} />\r\n\r\n      </Route>\r\n      </Switch>\r\n\r\n    </Router>\r\n    \r\n    </div>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}