{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactDAPP\\\\client\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport Authentication from \"./contracts/Authentication.json\";\nimport getWeb3 from \"./getWeb3\";\nimport tender from \"./dashComponents/tender\";\nimport 'semantic-ui-css/semantic.min.css';\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      web3: null,\n      account: null,\n      contract: null\n    };\n\n    this.componentDidMount = async () => {\n      try {\n        // Get network provider and web3 instance.\n        const web3 = await getWeb3(); // Use web3 to get the user's accounts.\n\n        const accounts = await web3.eth.getAccounts(); // Get the contract instance.\n\n        const networkId = await web3.eth.net.getId();\n        const deployedNetwork = Authentication.networks[networkId];\n        const contract1 = new web3.eth.Contract(Authentication.abi, deployedNetwork && deployedNetwork.address); // Set web3, accounts, and contract to the state, and then proceed with an\n        // example of interacting with the contract's methods.\n\n        this.setState({\n          web3,\n          account: accounts[0],\n          contract: contract1\n        }, this.start);\n      } catch (error) {\n        // Catch any errors for any of the above operations.\n        alert(\"Failed to load web3, accounts, or contract. Check console for details.\");\n        console.error(error);\n      }\n    };\n\n    this.start = async () => {\n      const _this$state = this.state,\n            web3 = _this$state.web3,\n            account = _this$state.account,\n            contract = _this$state.contract;\n      console.log(\"web3 =\", web3);\n      console.log(\"Contract =\", contract);\n      console.log(\"Acoount =\", account);\n    };\n  }\n\n  render() {\n    if (!this.state.web3) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Loading Web3, accounts, and contract...\");\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"tender\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/reactDAPP/client/src/App.js"],"names":["React","Component","Authentication","getWeb3","tender","App","state","web3","account","contract","componentDidMount","accounts","eth","getAccounts","networkId","net","getId","deployedNetwork","networks","contract1","Contract","abi","address","setState","start","error","alert","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAO,kCAAP;AAEA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BK,KAD0B,GAClB;AAAEC,MAAAA,IAAI,EAAE,IAAR;AAAcC,MAAAA,OAAO,EAAE,IAAvB;AAA6BC,MAAAA,QAAQ,EAAE;AAAvC,KADkB;;AAAA,SAG1BC,iBAH0B,GAGN,YAAY;AAC9B,UAAI;AACF;AACA,cAAMH,IAAI,GAAG,MAAMJ,OAAO,EAA1B,CAFE,CAIF;;AACA,cAAMQ,QAAQ,GAAG,MAAMJ,IAAI,CAACK,GAAL,CAASC,WAAT,EAAvB,CALE,CAOF;;AACA,cAAMC,SAAS,GAAG,MAAMP,IAAI,CAACK,GAAL,CAASG,GAAT,CAAaC,KAAb,EAAxB;AACA,cAAMC,eAAe,GAAGf,cAAc,CAACgB,QAAf,CAAwBJ,SAAxB,CAAxB;AACA,cAAMK,SAAS,GAAG,IAAIZ,IAAI,CAACK,GAAL,CAASQ,QAAb,CAChBlB,cAAc,CAACmB,GADC,EAEhBJ,eAAe,IAAIA,eAAe,CAACK,OAFnB,CAAlB,CAVE,CAeF;AACA;;AACA,aAAKC,QAAL,CAAc;AAAEhB,UAAAA,IAAF;AAAQC,UAAAA,OAAO,EAACG,QAAQ,CAAC,CAAD,CAAxB;AAA6BF,UAAAA,QAAQ,EAAEU;AAAvC,SAAd,EAAiE,KAAKK,KAAtE;AACD,OAlBD,CAkBE,OAAOC,KAAP,EAAc;AACd;AACAC,QAAAA,KAAK,0EAAL;AAGAC,QAAAA,OAAO,CAACF,KAAR,CAAcA,KAAd;AACD;AAEF,KA9ByB;;AAAA,SA+B1BD,KA/B0B,GA+BlB,YAAY;AAAA,0BAEgB,KAAKlB,KAFrB;AAAA,YAEVC,IAFU,eAEVA,IAFU;AAAA,YAELC,OAFK,eAELA,OAFK;AAAA,YAEGC,QAFH,eAEGA,QAFH;AAIlBkB,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBrB,IAAtB;AACAoB,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BnB,QAA1B;AACAkB,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBpB,OAAzB;AACD,KAtCyB;AAAA;;AA2C1BqB,EAAAA,MAAM,GAAG;AACP,QAAI,CAAC,KAAKvB,KAAL,CAAWC,IAAhB,EAAsB;AACpB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAAP;AACD;;AACD,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADC,CADF;AAKD;;AApDyB;;AAuD5B,eAAeF,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Authentication from \"./contracts/Authentication.json\";\nimport getWeb3 from \"./getWeb3\";\nimport tender from \"./dashComponents/tender\";\nimport 'semantic-ui-css/semantic.min.css';\n\nimport \"./App.css\";\n\nclass App extends Component {\n  state = { web3: null, account: null, contract: null };\n\n  componentDidMount = async () => {\n    try {\n      // Get network provider and web3 instance.\n      const web3 = await getWeb3();\n\n      // Use web3 to get the user's accounts.\n      const accounts = await web3.eth.getAccounts();\n\n      // Get the contract instance.\n      const networkId = await web3.eth.net.getId();\n      const deployedNetwork = Authentication.networks[networkId];\n      const contract1 = new web3.eth.Contract(\n        Authentication.abi,\n        deployedNetwork && deployedNetwork.address,\n      );\n\n      // Set web3, accounts, and contract to the state, and then proceed with an\n      // example of interacting with the contract's methods.\n      this.setState({ web3, account:accounts[0], contract: contract1 },this.start);\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`,\n      );\n      console.error(error);\n    }\n\n  };\n  start = async () => {\n   \n    const { web3,account,contract } = this.state;\n    \n    console.log(\"web3 =\", web3);\n    console.log(\"Contract =\", contract);\n    console.log(\"Acoount =\", account);\n  };\n\n\n \n\n  render() {\n    if (!this.state.web3) {\n      return <div>Loading Web3, accounts, and contract...</div>;\n    }\n    return (\n      <div>\n     <tender />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}