{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\CS-dapp\\\\client\\\\src\\\\components\\\\ShowRequest.js\";\nimport React, { Component } from 'react';\nimport { Table, Checkbox, Button } from 'semantic-ui-react';\nimport showRows from './showRows';\nimport '../App.css';\nexport default class showRequest extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.componentDidMount = () => {\n      renderRows = () => {\n        return this.info.map((request, index) => {\n          return React.createElement(\"showRows\", {\n            info: info,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 26\n            },\n            __self: this\n          });\n        });\n      };\n    };\n\n    this.componentDidUpdate = prevProps => {\n      if (prevProps.refresh != this.props.refresh) {\n        renderRows = () => {\n          return this.info.map((request, index) => {\n            return React.createElement(\"showRows\", {\n              info: info,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 41\n              },\n              __self: this\n            });\n          });\n        };\n      }\n    };\n  }\n\n  static async getInitialProps(props) {\n    let f = await props.contract.methods.getreqNo().call();\n    const info = await Promise.all(Array(f).fill().map((element, index) => {\n      return props.contract.methods.getRequeststatus(index).call();\n    }));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"ui container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, console.table(info), React.createElement(Table, {\n      compact: true,\n      celled: true,\n      definition: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Table.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Table.HeaderCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(Table.HeaderCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Request_NO\"), React.createElement(Table.HeaderCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Creator\"), React.createElement(Table.HeaderCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Description:\"), React.createElement(Table.HeaderCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Amount:\"), React.createElement(Table.HeaderCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Recipient:\"), React.createElement(Table.HeaderCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Voters/Donors\"), React.createElement(Table.HeaderCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Payment Completed\")))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/DELL/Desktop/CS-dapp/client/src/components/ShowRequest.js"],"names":["React","Component","Table","Checkbox","Button","showRows","showRequest","componentDidMount","renderRows","info","map","request","index","componentDidUpdate","prevProps","refresh","props","getInitialProps","f","contract","methods","getreqNo","call","Promise","all","Array","fill","element","getRequeststatus","render","console","table"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,KAAT,EAAeC,QAAf,EAAwBC,MAAxB,QAAqC,mBAArC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,YAAP;AAKA,eAAe,MAAMC,WAAN,SAA0BL,SAA1B,CAAoC;AAAA;AAAA;;AAAA,SAa9CM,iBAb8C,GAa5B,MAAI;AACrBC,MAAAA,UAAU,GAAC,MAAK;AACd,eAAO,KAAKC,IAAL,CAAUC,GAAV,CAAc,CAACC,OAAD,EAAUC,KAAV,KAAoB;AACvC,iBACE;AACC,YAAA,IAAI,EAAEH,IADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAKD,SANM,CAAP;AAOD,OARD;AAWA,KAzB6C;;AAAA,SA0B/CI,kBA1B+C,GA0B3BC,SAAD,IAAa;AAC9B,UAAGA,SAAS,CAACC,OAAV,IAAqB,KAAKC,KAAL,CAAWD,OAAnC,EACA;AACAP,QAAAA,UAAU,GAAC,MAAK;AACd,iBAAO,KAAKC,IAAL,CAAUC,GAAV,CAAc,CAACC,OAAD,EAAUC,KAAV,KAAoB;AACvC,mBACE;AACC,cAAA,IAAI,EAAEH,IADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAKD,WANM,CAAP;AAOD,SARD;AASD;AACA,KAvC8C;AAAA;;AACjD,eAAaQ,eAAb,CAA6BD,KAA7B,EAAoC;AACpC,QAAIE,CAAC,GAAC,MAAMF,KAAK,CAACG,QAAN,CAAeC,OAAf,CAAuBC,QAAvB,GAAkCC,IAAlC,EAAZ;AACA,UAAMb,IAAI,GAAG,MAAMc,OAAO,CAACC,GAAR,CACjBC,KAAK,CAACP,CAAD,CAAL,CACGQ,IADH,GAEGhB,GAFH,CAEO,CAACiB,OAAD,EAAUf,KAAV,KAAoB;AACvB,aAAOI,KAAK,CAACG,QAAN,CAAeC,OAAf,CAAuBQ,gBAAvB,CAAwChB,KAAxC,EAA+CU,IAA/C,EAAP;AACD,KAJH,CADiB,CAAnB;AAQG;;AA+BJO,EAAAA,MAAM,GAAE;AAEP,WACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,OAAO,CAACC,KAAR,CAActB,IAAd,CADH,EAGA,oBAAC,KAAD;AAAO,MAAA,OAAO,MAAd;AAAe,MAAA,MAAM,MAArB;AAAsB,MAAA,UAAU,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACF,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,EAGE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHF,EAIE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF,EAKE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALF,EAME,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANF,EAOE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAPF,EAQE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BARF,CADF,CADE,CAHA,CADF;AAsBA;;AAlEiD","sourcesContent":["import React,{ Component} from 'react'\r\nimport { Table,Checkbox,Button} from 'semantic-ui-react';\r\nimport showRows from './showRows';\r\nimport '../App.css' \r\n\r\n\r\n\r\n\r\nexport default class showRequest extends Component {\r\n  static async getInitialProps(props) {\r\n  let f=await props.contract.methods.getreqNo().call()\r\n  const info = await Promise.all(\r\n    Array(f)\r\n      .fill()\r\n      .map((element, index) => {\r\n        return props.contract.methods.getRequeststatus(index).call();\r\n      })\r\n      \r\n  )\r\n    }\r\n  \r\n     componentDidMount=()=>{\r\n      renderRows=()=> {\r\n        return this.info.map((request, index) => {\r\n          return (\r\n            <showRows\r\n             info={info}\r\n            />\r\n          );\r\n        });\r\n      }\r\n\r\n\r\n     }\r\n    componentDidUpdate=(prevProps)=>{\r\n      if(prevProps.refresh != this.props.refresh)\r\n      {\r\n      renderRows=()=> {\r\n        return this.info.map((request, index) => {\r\n          return (\r\n            <showRows\r\n             info={info}\r\n            />\r\n          );\r\n        });\r\n      }\r\n    }\r\n    }\r\n\r\n \r\n render(){\r\n  \r\n  return (\r\n    <div className=\"ui container\">\r\n      {console.table(info)}\r\n\r\n    <Table compact celled definition>\r\n  <Table.Header>\r\n    <Table.Row>\r\n      <Table.HeaderCell />\r\n      <Table.HeaderCell>Request_NO</Table.HeaderCell>\r\n      <Table.HeaderCell>Creator</Table.HeaderCell>\r\n      <Table.HeaderCell>Description:</Table.HeaderCell>\r\n      <Table.HeaderCell>Amount:</Table.HeaderCell>\r\n      <Table.HeaderCell>Recipient:</Table.HeaderCell>\r\n      <Table.HeaderCell>Voters/Donors</Table.HeaderCell>\r\n      <Table.HeaderCell>Payment Completed</Table.HeaderCell>\r\n     \r\n    </Table.Row>\r\n  </Table.Header>\r\n    </Table>\r\n\r\n </div> \r\n  )\r\n }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}