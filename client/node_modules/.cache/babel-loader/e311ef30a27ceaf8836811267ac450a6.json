{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\CS-dapp\\\\client\\\\src\\\\components\\\\Dashboard.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, NavLink, Switch, Route } from 'react-router-dom';\nimport Guideline from '../dashComponents/Guideline';\nimport Tender from '../dashComponents/Tender';\nimport '../dashComponents/sidebar.css';\nimport aboutUS from '../dashComponents/aboutUS';\nimport RequestLog from '../dashComponents/RequestLog';\nimport getWeb3 from '../getWeb3';\nimport bcs from '../contracts/bcs.json';\nimport TenderLogs from '../dashComponents/TenderLogs';\nlet array = new Array(1).fill().map(() => new Array(8).fill('0')); //this is dummy array of objects used for local storage \n\nlocalStorage.setItem(\"info\", JSON.stringify(array));\n\nclass Dashboard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      account: null,\n      sidebar: true,\n      contract: null,\n      caddress: null,\n      web3: null\n    };\n\n    this.componentDidMount = async () => {\n      try {\n        // Get network provider and web3 instance.\n        const web3 = await getWeb3(); // Use web3 to get the user's accounts.\n\n        const accounts = await web3.eth.getAccounts(); // Get the BCS contract instance.\n\n        const networkId = await web3.eth.net.getId();\n        const deployedNetwork = bcs.networks[networkId];\n        const contractA = new web3.eth.Contract(bcs.abi, deployedNetwork && deployedNetwork.address);\n        const address = deployedNetwork.address; // Set web3, accounts, and contract to the state, and then proceed with an\n        // example of interacting with the contract's methods.\n\n        this.setState({\n          web3,\n          account: accounts,\n          contract: contractA,\n          caddress: address\n        }, this.start);\n      } catch (error) {\n        // Catch any errors for any of the above operations.\n        alert(\"Failed to load web3, accounts, or contract. Check console for details.\");\n        console.error(error);\n      }\n    };\n\n    this.start = async () => {\n      const _this$state = this.state,\n            web3 = _this$state.web3,\n            account = _this$state.account,\n            contract = _this$state.contract,\n            caddress = _this$state.caddress;\n      console.log(\"web3 =\", web3);\n      console.log(\"Contract =\", contract);\n      console.log(\"Acoount =\", account);\n      console.log(\"caddress=\", caddress);\n    };\n\n    this.showSidebar = () => {\n      this.setState({\n        sidebar: !this.state.sidebar\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"nav\", {\n      className: this.state.sidebar ? \"sidebar active\" : \"sidebar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"hamburger\",\n      type: \"button\",\n      onClick: this.showSidebar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    })), React.createElement(\"ul\", {\n      onClick: this.showSidebar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"DASHBOARD\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      activeClassName: \"text-white\",\n      to: \"/guideline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"User Guideline\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      to: \"/tender\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Tender Creation\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      to: \"/tenderlog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Tender Logs\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      to: \"/request\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Request Logs\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      to: \"/aboutus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"About Us\")))), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/guideline\",\n      component: Guideline,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/tender\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Tender, {\n      web3: this.state.web3,\n      contract: this.state.contract,\n      account: this.state.account,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })), React.createElement(Route, {\n      exact: true,\n      path: \"/tenderlog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(TenderLogs, {\n      address: this.state.caddress,\n      contract: this.state.contract,\n      account: this.state.account,\n      web3: this.state.web3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/request\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(RequestLog, {\n      address: this.state.caddress,\n      contract: this.state.contract,\n      account: this.state.account,\n      web3: this.state.web3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/aboutus\",\n      component: aboutUS,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["C:/Users/DELL/Desktop/CS-dapp/client/src/components/Dashboard.js"],"names":["React","Component","BrowserRouter","Router","NavLink","Switch","Route","Guideline","Tender","aboutUS","RequestLog","getWeb3","bcs","TenderLogs","array","Array","fill","map","localStorage","setItem","JSON","stringify","Dashboard","state","account","sidebar","contract","caddress","web3","componentDidMount","accounts","eth","getAccounts","networkId","net","getId","deployedNetwork","networks","contractA","Contract","abi","address","setState","start","error","alert","console","log","showSidebar","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { BrowserRouter as Router,NavLink,Switch,Route } from 'react-router-dom';\r\nimport Guideline from '../dashComponents/Guideline';\r\nimport Tender from '../dashComponents/Tender';\r\nimport '../dashComponents/sidebar.css';\r\nimport aboutUS from '../dashComponents/aboutUS';\r\nimport RequestLog from '../dashComponents/RequestLog';\r\nimport getWeb3 from '../getWeb3';\r\nimport bcs from '../contracts/bcs.json'\r\nimport TenderLogs from '../dashComponents/TenderLogs';\r\n\r\n\r\nlet array=new Array(1).fill().map(()=>new Array(8).fill('0')) //this is dummy array of objects used for local storage \r\nlocalStorage.setItem(\"info\",JSON.stringify(array))\r\n class Dashboard extends Component {\r\n   state={account:null,sidebar:true,contract: null,caddress : null,web3:null}\r\n\r\n \r\n   componentDidMount = async () => {\r\n     try {\r\n       // Get network provider and web3 instance.\r\n       const web3 = await getWeb3();\r\n \r\n       // Use web3 to get the user's accounts.\r\n       const accounts = await web3.eth.getAccounts();\r\n \r\n    \r\n   // Get the BCS contract instance.\r\n    const networkId = await web3.eth.net.getId();\r\n     const deployedNetwork = bcs.networks[networkId];\r\n     const contractA = new web3.eth.Contract(\r\n      bcs.abi,\r\n     deployedNetwork && deployedNetwork.address,);\r\n     const address = deployedNetwork.address;\r\n\r\n      // Set web3, accounts, and contract to the state, and then proceed with an\r\n      // example of interacting with the contract's methods.\r\n      this.setState({ web3, account:accounts, contract: contractA,caddress : address},this.start);\r\n    } catch (error) {\r\n      // Catch any errors for any of the above operations.\r\n      alert(\r\n        `Failed to load web3, accounts, or contract. Check console for details.`,\r\n      );\r\n      console.error(error);\r\n    }\r\n\r\n  };\r\n  start = async () => {\r\n   \r\n    const { web3,account,contract,caddress } = this.state;\r\n    \r\n    console.log(\"web3 =\", web3);\r\n    console.log(\"Contract =\", contract);\r\n    console.log(\"Acoount =\", account);\r\n    console.log(\"caddress=\",caddress)\r\n  };\r\n\r\n       \r\n \r\n    \r\n  showSidebar = () => { \r\n     this.setState({sidebar: !(this.state.sidebar)});\r\n\r\n  }\r\n  render() {\r\n  \r\n\r\n    return( \r\n    <div>\r\n\r\n    <Router>\r\n    <nav className={this.state.sidebar ? \"sidebar active\" : \"sidebar\"}>\r\n      <button className=\"hamburger\" type=\"button\" onClick={this.showSidebar}><div></div></button>\r\n      <ul onClick={this.showSidebar}>\r\n        <li>DASHBOARD</li>\r\n        <li><NavLink activeClassName=\"text-white\" to=\"/guideline\" >User Guideline</NavLink></li>\r\n        <li><NavLink to=\"/tender\">Tender Creation</NavLink></li>\r\n        <li><NavLink to=\"/tenderlog\">Tender Logs</NavLink></li>\r\n        <li><NavLink to=\"/request\">Request Logs</NavLink></li>\r\n        <li><NavLink to=\"/aboutus\">About Us</NavLink></li>\r\n      </ul>\r\n    </nav>\r\n    \r\n\r\n    <Switch>\r\n      \r\n      <Route exact path=\"/guideline\"  component={Guideline} />\r\n\r\n      <Route path=\"/tender\">\r\n        <Tender\r\n         web3={this.state.web3} \r\n        contract={this.state.contract}\r\n         account={this.state.account}\r\n          />\r\n      </Route>\r\n      \r\n\r\n      <Route exact path=\"/tenderlog\">\r\n      <TenderLogs\r\n         address={this.state.caddress}\r\n         contract={this.state.contract}\r\n         account={this.state.account}\r\n         web3={this.state.web3} />\r\n         \r\n      </Route>\r\n\r\n      <Route path=\"/request\">\r\n        <RequestLog\r\n        \r\n        address={this.state.caddress}\r\n        contract={this.state.contract}\r\n        account={this.state.account}\r\n        web3={this.state.web3} />\r\n\r\n      </Route>\r\n\r\n      <Route path=\"/aboutus\"  component={aboutUS} />\r\n    \r\n\r\n    </Switch>\r\n    </Router>\r\n\r\n  </div>\r\n    );\r\n  }\r\n}\r\nexport default Dashboard"]},"metadata":{},"sourceType":"module"}