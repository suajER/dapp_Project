{"ast":null,"code":"import _slicedToArray from \"D:\\\\test\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\test\\\\client\\\\src\\\\dashComponents\\\\TenderLogs.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Segment, Card } from 'semantic-ui-react';\nimport { Link } from \"react-router-dom\";\nexport default function TenderLogs(props) {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        pdfUrl = _useState2[0],\n        setPdfUrl = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        target = _useState4[0],\n        setTarget = _useState4[1];\n\n  const _useState5 = useState(null),\n        _useState6 = _slicedToArray(_useState5, 2),\n        min = _useState6[0],\n        setMin = _useState6[1];\n\n  const _useState7 = useState(null),\n        _useState8 = _slicedToArray(_useState7, 2),\n        donors = _useState8[0],\n        setDonors = _useState8[1];\n\n  const _useState9 = useState(null),\n        _useState10 = _slicedToArray(_useState9, 2),\n        beneficiary = _useState10[0],\n        setBeneficiary = _useState10[1];\n\n  const _useState11 = useState(null),\n        _useState12 = _slicedToArray(_useState11, 2),\n        raisedAmount = _useState12[0],\n        setRaisedamount = _useState12[1];\n\n  const _useState13 = useState(null),\n        _useState14 = _slicedToArray(_useState13, 2),\n        request = _useState14[0],\n        setRequest = _useState14[1];\n\n  const _useState15 = useState(null),\n        _useState16 = _slicedToArray(_useState15, 2),\n        balance = _useState16[0],\n        setBalance = _useState16[1];\n\n  const weiTOeth = amount => {\n    const ConvertedAmount = props.web3.utils.fromWei(amount);\n    return ConvertedAmount;\n  };\n\n  const prevTarget = target;\n  useEffect(async () => {\n    if (prevTarget == target) {\n      const info = await props.contract.methods.getTenderinfo().call();\n      setMin(weiTOeth(info[0]));\n      setTarget(weiTOeth(info[1]));\n      setPdfUrl(info[2]);\n      setBalance(weiTOeth(info[3]));\n      setBeneficiary(info[4]);\n      setDonors(info[5]);\n      setRequest(info[6]);\n      setRaisedamount(weiTOeth(info[7]));\n    }\n  }, [props, raisedAmount]);\n  return React.createElement(\"div\", {\n    className: \"ui container center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, console.log(props.web3), console.log(props.contract), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Tender Status:\"), React.createElement(Card.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Card.Content, {\n    header: props.address,\n    meta: \"Deployed Tender Address\",\n    description: \"This is the address of deployed tender in this system.\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })), React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Card.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Card.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, beneficiary), React.createElement(Card.Meta, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Address of the creator\"), React.createElement(Card.Description, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"This address can create request for collected amount\"))), React.createElement(Card, {\n    header: pdfUrl,\n    meta: \"Link of the protocol\",\n    description: \"This is the uploaded protocol from this tender.Copy URL and review it.\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(Card.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(Card.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, target, \" ETH\"), React.createElement(Card.Meta, {\n    content: \"Target Amount\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), React.createElement(Card.Description, {\n    content: \"This is the amount targeted for this tender.\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }))), React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(Card.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(Card.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, min, \" ETH\"), React.createElement(Card.Meta, {\n    content: \"Minimum Amount\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), React.createElement(Card.Description, {\n    content: \"This is minimum amount specified by the tender to contribute.\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }))), React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(Card.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(Card.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, raisedAmount, \" ETH\"), React.createElement(Card.Meta, {\n    content: \"Raised Amount\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }), React.createElement(Card.Description, {\n    content: \"This is the collected amount in this tender.\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }))), React.createElement(Card, {\n    header: donors,\n    meta: \"Number Of Donors\",\n    description: \"This shows the number of people who donated in this tender.\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }), React.createElement(Card, {\n    header: request,\n    meta: \"Number Of Requests\",\n    description: \"This shows the number of requests created by the creator after he/she wished to stop funding.You won't be able to donate after creator makes request.\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  })), React.createElement(Segment.Group, {\n    horizontal: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(Segment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"Tender Current Balance: \", balance, \" ETH\"), React.createElement(Segment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"Number of Requests:   \", React.createElement(Link, {\n    to: \"/dashboard/request\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"View Requests\"))));\n}","map":{"version":3,"sources":["D:/test/client/src/dashComponents/TenderLogs.js"],"names":["React","useState","useEffect","Segment","Card","Link","TenderLogs","props","pdfUrl","setPdfUrl","target","setTarget","min","setMin","donors","setDonors","beneficiary","setBeneficiary","raisedAmount","setRaisedamount","request","setRequest","balance","setBalance","weiTOeth","amount","ConvertedAmount","web3","utils","fromWei","prevTarget","info","contract","methods","getTenderinfo","call","console","log","address"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react'\r\nimport {Segment , Card} from 'semantic-ui-react';\r\nimport {Link} from \"react-router-dom\"\r\n\r\n\r\nexport default function TenderLogs(props) {\r\n\r\n\r\n  const [pdfUrl ,setPdfUrl] = useState(null)\r\n  const [target ,setTarget] = useState(null)\r\n  const [min ,setMin] = useState(null)\r\n  const [donors ,setDonors] = useState(null)\r\n  const [beneficiary ,setBeneficiary] = useState(null)\r\n  const [raisedAmount ,setRaisedamount] = useState(null)\r\n  const [request ,setRequest] = useState(null)\r\n  const [balance, setBalance] = useState(null)\r\n\r\n  const weiTOeth=(amount)=>{\r\n    const ConvertedAmount=props.web3.utils.fromWei(amount);\r\n    return ConvertedAmount;\r\n    }\r\n\r\n  const prevTarget=target\r\n\r\n \r\n  useEffect(async()=>{\r\n        if(prevTarget == target){\r\n        const info = await props.contract.methods.getTenderinfo().call();\r\n        setMin(weiTOeth(info[0]))\r\n        setTarget(weiTOeth(info[1]))\r\n        setPdfUrl(info[2]) \r\n        setBalance(weiTOeth(info[3]))\r\n        setBeneficiary(info[4])\r\n        setDonors(info[5])\r\n        setRequest(info[6])\r\n        setRaisedamount(weiTOeth(info[7]))  \r\n        }  \r\n  },\r\n        [props,raisedAmount]);\r\n\r\n\r\n    \r\n      \r\n           \r\n  return (\r\n    <div className='ui container center'>\r\n    {console.log(props.web3)}\r\n    {console.log(props.contract)}\r\n     <h1>Tender Status:</h1>\r\n     <Card.Group>\r\n     <Card>\r\n       <Card.Content\r\n         header={props.address}\r\n         meta='Deployed Tender Address'\r\n         description='This is the address of deployed tender in this system.'\r\n       />\r\n     </Card>\r\n     <Card>\r\n       <Card.Content>\r\n         <Card.Header>{beneficiary}</Card.Header>\r\n         <Card.Meta>Address of the creator</Card.Meta>\r\n         <Card.Description>\r\n           This address can create request for collected amount\r\n         </Card.Description>\r\n       </Card.Content>\r\n     </Card>\r\n     <Card\r\n       header={pdfUrl}\r\n       meta='Link of the protocol'\r\n       description='This is the uploaded protocol from this tender.Copy URL and review it.'\r\n     />\r\n     <Card>\r\n       <Card.Content>\r\n         <Card.Header>{target} ETH</Card.Header>\r\n         <Card.Meta content='Target Amount' />\r\n         <Card.Description content='This is the amount targeted for this tender.' />\r\n       </Card.Content>\r\n     </Card>\r\n \r\n     <Card>\r\n       <Card.Content>\r\n         <Card.Header>{min} ETH</Card.Header>\r\n         <Card.Meta content='Minimum Amount' />\r\n         <Card.Description content='This is minimum amount specified by the tender to contribute.' />\r\n       </Card.Content>\r\n     </Card>\r\n     <Card>\r\n       <Card.Content>\r\n         <Card.Header>{raisedAmount} ETH</Card.Header>\r\n         <Card.Meta content='Raised Amount' />\r\n         <Card.Description content='This is the collected amount in this tender.' />\r\n       </Card.Content>\r\n     </Card>\r\n\r\n \r\n      <Card\r\n       header={donors}\r\n       meta='Number Of Donors'\r\n       description='This shows the number of people who donated in this tender.'\r\n     />\r\n\r\n     <Card\r\n       header={request}\r\n       meta='Number Of Requests'\r\n       description=\"This shows the number of requests created by the creator after he/she wished to stop funding.You won't be able to donate after creator makes request.\"\r\n     />\r\n   </Card.Group>\r\n   <Segment.Group horizontal>\r\n     <Segment>Tender Current Balance: {balance} ETH</Segment>\r\n   <Segment>Number of Requests:   <Link to='/dashboard/request'>View Requests</Link></Segment>\r\n \r\n </Segment.Group>\r\n\r\n \r\n      </div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}