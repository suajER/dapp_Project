{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar multiaddr = require('multiaddr');\n\nvar configure = require('../lib/configure.js');\n\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\n\nvar responseTypes = require('./response-types.js');\n\nconst createFindPeer = configure.configure(api => {\n  async function findPeer(peerId, options = {}) {\n    const res = await api.post('dht/findpeer', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams.toUrlSearchParams({\n        arg: peerId,\n        ...options\n      }),\n      headers: options.headers\n    });\n\n    for await (const data of res.ndjson()) {\n      if (data.Type === responseTypes.FinalPeer && data.Responses) {\n        const _data$Responses$ = data.Responses[0],\n              ID = _data$Responses$.ID,\n              Addrs = _data$Responses$.Addrs;\n        return {\n          id: ID,\n          addrs: (Addrs || []).map(a => new multiaddr.Multiaddr(a))\n        };\n      }\n    }\n\n    throw new Error('not found');\n  }\n\n  return findPeer;\n});\nexports.createFindPeer = createFindPeer;","map":null,"metadata":{},"sourceType":"script"}