{"ast":null,"code":"import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormCheckInput from './FormCheckInput';\nimport InputGroupContext from './InputGroupContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst InputGroupText = createWithBsPrefix('input-group-text', {\n  Component: 'span'\n});\n\nconst InputGroupCheckbox = props =>\n/*#__PURE__*/\n_jsx(InputGroupText, {\n  children:\n  /*#__PURE__*/\n  _jsx(FormCheckInput, {\n    type: \"checkbox\",\n    ...props\n  })\n});\n\nconst InputGroupRadio = props =>\n/*#__PURE__*/\n_jsx(InputGroupText, {\n  children:\n  /*#__PURE__*/\n  _jsx(FormCheckInput, {\n    type: \"radio\",\n    ...props\n  })\n});\n/**\r\n *\r\n * @property {InputGroupText} Text\r\n * @property {InputGroupRadio} Radio\r\n * @property {InputGroupCheckbox} Checkbox\r\n */\n\n\nconst InputGroup =\n/*#__PURE__*/\nReact.forwardRef(({\n  bsPrefix,\n  size,\n  hasValidation,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group'); // Intentionally an empty object. Used in detecting if a dropdown\n  // exists under an input group.\n\n  const contextValue = useMemo(() => ({}), []);\n  return (\n    /*#__PURE__*/\n    _jsx(InputGroupContext.Provider, {\n      value: contextValue,\n      children:\n      /*#__PURE__*/\n      _jsx(Component, {\n        ref: ref,\n        ...props,\n        className: classNames(className, bsPrefix, size && \"\".concat(bsPrefix, \"-\").concat(size), hasValidation && 'has-validation')\n      })\n    })\n  );\n});\nInputGroup.displayName = 'InputGroup';\nexport default Object.assign(InputGroup, {\n  Text: InputGroupText,\n  Radio: InputGroupRadio,\n  Checkbox: InputGroupCheckbox\n});","map":null,"metadata":{},"sourceType":"module"}