{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\DELL\\\\Desktop\\\\CS-dapp\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport PopoverHeader from './PopoverHeader';\nimport PopoverBody from './PopoverBody';\nimport { getOverlayDirection } from './helpers';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst defaultProps = {\n  placement: 'right'\n};\nconst Popover =\n/*#__PURE__*/\nReact.forwardRef(({\n  bsPrefix,\n  placement,\n  className,\n  style,\n  children,\n  body,\n  arrowProps,\n  popper: _,\n  show: _1,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'popover');\n  const isRTL = useIsRTL();\n\n  const _ref = (placement == null ? void 0 : placement.split('-')) || [],\n        _ref2 = _slicedToArray(_ref, 1),\n        primaryPlacement = _ref2[0];\n\n  const bsDirection = getOverlayDirection(primaryPlacement, isRTL);\n  return (\n    /*#__PURE__*/\n    _jsxs(\"div\", {\n      ref: ref,\n      role: \"tooltip\",\n      style: style,\n      \"x-placement\": primaryPlacement,\n      className: classNames(className, decoratedBsPrefix, primaryPlacement && \"bs-popover-\".concat(bsDirection)),\n      ...props,\n      children: [\n      /*#__PURE__*/\n      _jsx(\"div\", {\n        className: \"popover-arrow\",\n        ...arrowProps\n      }), body ?\n      /*#__PURE__*/\n      _jsx(PopoverBody, {\n        children: children\n      }) : children]\n    })\n  );\n});\nPopover.defaultProps = defaultProps;\nexport default Object.assign(Popover, {\n  Header: PopoverHeader,\n  Body: PopoverBody,\n  // Default popover offset.\n  // https://github.com/twbs/bootstrap/blob/5c32767e0e0dbac2d934bcdee03719a65d3f1187/js/src/popover.js#L28\n  POPPER_OFFSET: [0, 8]\n});","map":null,"metadata":{},"sourceType":"module"}