{"ast":null,"code":"var _jsxFileName = \"D:\\\\test\\\\client\\\\src\\\\components\\\\TenderStatus.js\";\nimport React, { Component } from 'react';\nimport { Segment, Card } from 'semantic-ui-react';\nimport { Link } from \"react-router-dom\";\n\nclass TenderStatus extends Component {\n  constructor(props) {\n    super(props);\n\n    this.weiTOeth = amount => {\n      const ConvertedAmount = this.props.web3.utils.fromWei(amount);\n      return ConvertedAmount;\n    };\n\n    this.componentDidMount = () => {\n      console.log(\"componentDidMount\");\n    };\n\n    this.componentDidUpdate = async prevState => {\n      if (prevState.target == this.state.target) {\n        const info = await this.props.contract.methods.getTenderinfo().call();\n        this.setState({\n          minimumcontribution: this.weiTOeth(info[0]),\n          target: this.weiTOeth(info[1]),\n          url: info[2],\n          balance: this.weiTOeth(info[3]),\n          beneficiary: info[4],\n          donors: info[5],\n          requests: info[6],\n          raisedAmount: this.weiTOeth(info[7])\n        });\n      }\n\n      console.log(\"ComponentDidUpdate\");\n    };\n\n    this.clickHandler = async () => {\n      await this.props.contract.methods.donate().send({\n        from: this.props.account,\n        value: this.props.web3.utils.toWei('10', 'ether')\n      });\n    };\n\n    this.state = {\n      target: null,\n      minimumcontribution: null,\n      url: null,\n      beneficiary: null,\n      balance: null,\n      donors: null,\n      requests: null,\n      raisedAmount: null,\n      donateValue: null\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"ui container center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, console.log(\"render\"), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Tender Status:\"), React.createElement(Card.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Card.Content, {\n      header: this.props.address,\n      meta: \"Deployed Tender Address\",\n      description: \"This is the address of deployed tender in this system.\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })), React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, this.state.beneficiary), React.createElement(Card.Meta, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Address of the creator\"), React.createElement(Card.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"This address can create request for collected amount\"))), React.createElement(Card, {\n      header: this.state.url,\n      meta: \"Link of the protocol\",\n      description: \"This is the uploaded protocol from this tender.Copy URL and review it.\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, this.state.target, \" ETH\"), React.createElement(Card.Meta, {\n      content: \"Target Amount\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(Card.Description, {\n      content: \"This is the amount targeted for this tender.\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }))), React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, this.state.minimumcontribution, \" ETH\"), React.createElement(Card.Meta, {\n      content: \"Minimum Amount\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(Card.Description, {\n      content: \"This is minimum amount specified by the tender to contribute.\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }))), React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, this.state.raisedAmount, \" ETH\"), React.createElement(Card.Meta, {\n      content: \"Raised Amount\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(Card.Description, {\n      content: \"This is the collected amount in this tender.\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }))), React.createElement(Card, {\n      header: this.state.donors,\n      meta: \"Number Of Donors\",\n      description: \"This shows the number of people who donated in this tender.\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(Card, {\n      header: this.state.requests,\n      meta: \"Number Of Requests\",\n      description: \"This shows the number of requests created by the creator after he/she wished to stop funding.You won't be able to donate after creator makes request.\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    })), React.createElement(Segment.Group, {\n      horizontal: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Tender Current Balance: \", this.state.balance, \" ETH\"), React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Number of Requests:   \", React.createElement(Link, {\n      to: \"/dashboard/request\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"View Requests\"))), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Amount:\"), React.createElement(\"input\", {\n      type: \"number\",\n      labelPosition: \"right\",\n      placeholder: \"Amount\",\n      onChange: e => this.setState({\n        donateValue: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"ui button green\",\n      onClick: this.state.clickHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Donate\"));\n  }\n\n}\n\nexport default TenderStatus;","map":{"version":3,"sources":["D:/test/client/src/components/TenderStatus.js"],"names":["React","Component","Segment","Card","Link","TenderStatus","constructor","props","weiTOeth","amount","ConvertedAmount","web3","utils","fromWei","componentDidMount","console","log","componentDidUpdate","prevState","target","state","info","contract","methods","getTenderinfo","call","setState","minimumcontribution","url","balance","beneficiary","donors","requests","raisedAmount","clickHandler","donate","send","from","account","value","toWei","donateValue","render","address","e"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport {Segment,  Card} from 'semantic-ui-react';\r\nimport {Link} from \"react-router-dom\"\r\n class TenderStatus extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state={\r\n      target: null,\r\n      minimumcontribution: null,\r\n      url: null,\r\n      beneficiary: null,\r\n      balance : null,\r\n      donors : null,\r\n      requests : null,\r\n      raisedAmount:null,\r\n      donateValue:null\r\n  \r\n  }\r\n\r\n}\r\nweiTOeth=(amount)=>{\r\n  const ConvertedAmount=this.props.web3.utils.fromWei(amount);\r\n  return ConvertedAmount;\r\n  }\r\n\r\n  componentDidMount=()=>{\r\n    console.log(\"componentDidMount\")\r\n  }\r\n\r\n  componentDidUpdate = async(prevState) =>{\r\n    if (prevState.target == this.state.target) {\r\n     \r\n    const info = await this.props.contract.methods.getTenderinfo().call();\r\n    this.setState(\r\n      {minimumcontribution : this.weiTOeth(info[0]),\r\n        target : this.weiTOeth(info[1]),\r\n        url : info[2], \r\n        balance : this.weiTOeth(info[3]), \r\n        beneficiary: info[4],donors:info[5],requests : info[6],\r\n        raisedAmount :  this.weiTOeth(info[7]) \r\n      });\r\n    }\r\n    console.log(\"ComponentDidUpdate\")\r\n    \r\n  }\r\n\r\n  clickHandler = async ()=>{\r\n    await this.props.contract.methods.donate().send(\r\n      {from : this.props.account,value:this.props.web3.utils.toWei('10','ether')})\r\n  }\r\n   \r\n\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      \r\n       \r\n      <div className='ui container center'>\r\n      {console.log(\"render\")}\r\n       <h1>Tender Status:</h1>\r\n       <Card.Group>\r\n       <Card>\r\n         <Card.Content\r\n           header={this.props.address}\r\n           meta='Deployed Tender Address'\r\n           description='This is the address of deployed tender in this system.'\r\n         />\r\n       </Card>\r\n       <Card>\r\n         <Card.Content>\r\n           <Card.Header>{this.state.beneficiary}</Card.Header>\r\n           <Card.Meta>Address of the creator</Card.Meta>\r\n           <Card.Description>\r\n             This address can create request for collected amount\r\n           </Card.Description>\r\n         </Card.Content>\r\n       </Card>\r\n       <Card\r\n         header={this.state.url}\r\n         meta='Link of the protocol'\r\n         description='This is the uploaded protocol from this tender.Copy URL and review it.'\r\n       />\r\n       <Card>\r\n         <Card.Content>\r\n           <Card.Header>{this.state.target} ETH</Card.Header>\r\n           <Card.Meta content='Target Amount' />\r\n           <Card.Description content='This is the amount targeted for this tender.' />\r\n         </Card.Content>\r\n       </Card>\r\n   \r\n       <Card>\r\n         <Card.Content>\r\n           <Card.Header>{this.state.minimumcontribution} ETH</Card.Header>\r\n           <Card.Meta content='Minimum Amount' />\r\n           <Card.Description content='This is minimum amount specified by the tender to contribute.' />\r\n         </Card.Content>\r\n       </Card>\r\n       <Card>\r\n         <Card.Content>\r\n           <Card.Header>{this.state.raisedAmount} ETH</Card.Header>\r\n           <Card.Meta content='Raised Amount' />\r\n           <Card.Description content='This is the collected amount in this tender.' />\r\n         </Card.Content>\r\n       </Card>\r\n \r\n   \r\n        <Card\r\n         header={this.state.donors}\r\n         meta='Number Of Donors'\r\n         description='This shows the number of people who donated in this tender.'\r\n       />\r\n \r\n       <Card\r\n         header={this.state.requests}\r\n         meta='Number Of Requests'\r\n         description=\"This shows the number of requests created by the creator after he/she wished to stop funding.You won't be able to donate after creator makes request.\"\r\n       />\r\n     </Card.Group>\r\n     <Segment.Group horizontal>\r\n       <Segment>Tender Current Balance: {this.state.balance} ETH</Segment>\r\n     <Segment>Number of Requests:   <Link to='/dashboard/request'>View Requests</Link></Segment>\r\n   \r\n   </Segment.Group>\r\n   <div className=\"field\">\r\n           <label>Amount:</label>\r\n           <input type=\"number\" labelPosition=\"right\" placeholder='Amount' onChange={(e) => this.setState({ donateValue: e.target.value })}></input>\r\n         </div>\r\n \r\n         <button className='ui button green' onClick={this.state.clickHandler} \r\n         >Donate</button>\r\n   \r\n        </div>\r\n    )\r\n  }\r\n}\r\nexport default TenderStatus\r\n"]},"metadata":{},"sourceType":"module"}