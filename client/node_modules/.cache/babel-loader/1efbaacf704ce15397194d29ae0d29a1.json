{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar cid = require('multiformats/cid');\n\nvar configure = require('../lib/configure.js');\n\nvar normaliseInput = require('ipfs-core-utils/pins/normalise-input');\n\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\n\nconst createRmAll = configure.configure(api => {\n  async function* rmAll(source, options = {}) {\n    for await (const _ref of normaliseInput.normaliseInput(source)) {\n      const path = _ref.path;\n      const recursive = _ref.recursive;\n      const searchParams = new URLSearchParams(options.searchParams);\n      searchParams.append('arg', \"\".concat(path));\n      if (recursive != null) searchParams.set('recursive', String(recursive));\n      const res = await api.post('pin/rm', {\n        signal: options.signal,\n        headers: options.headers,\n        searchParams: toUrlSearchParams.toUrlSearchParams({ ...options,\n          arg: \"\".concat(path),\n          recursive\n        })\n      });\n\n      for await (const pin of res.ndjson()) {\n        if (pin.Pins) {\n          yield* pin.Pins.map(cid$1 => cid.CID.parse(cid$1));\n          continue;\n        }\n\n        yield cid.CID.parse(pin);\n      }\n    }\n  }\n\n  return rmAll;\n});\nexports.createRmAll = createRmAll;","map":null,"metadata":{},"sourceType":"script"}