{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactDAPP\\\\client\\\\src\\\\components\\\\SignIn.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Button, Card, Message } from 'semantic-ui-react';\nimport AuthValidation from '../utils/AuthValidation';\nimport \"../App.css\";\n\nclass SignIn extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSignIn = async () => {\n      if (this.state.username !== '' && this.state.password !== '' && this.state.digicode !== '') {\n        let username = this.state.username.trim();\n        let password = this.state.password.trim();\n        let digicode = this.state.digicode.trim();\n        let usernameToSend = username; //===\n\n        if (password.length < 8) {\n          this.setState({\n            alertMessage: \"at least 8 characters for password\",\n            status: 'failed',\n            password: '',\n            digicode: ''\n          });\n          return;\n        } else {}\n\n        if (digicode.length !== 6) {\n          this.setState({\n            alertMessage: \"6 digit required for digicode\",\n            status: 'failed',\n            digicode: ''\n          });\n          return;\n        } else {\n          let userAddress = await this.props.contract.methods.getUserAddress().call({\n            from: this.props.account\n          });\n\n          if (userAddress === '0x0000000000000000000000000000000000000000') {\n            this.setState({\n              alertMessage: 'Account does not exists',\n              status: 'failed',\n              username: '',\n              password: '',\n              digicode: ''\n            });\n            return;\n          } else {\n            let validated = await AuthValidation(username, this.props.account, password, digicode, this.props.web3, this.props.contract);\n\n            if (!validated) {\n              this.setState({\n                alertMessage: 'Incorrect log in',\n                status: 'failed',\n                username: '',\n                password: '',\n                digicode: ''\n              });\n              return;\n            } else {\n              this.setState({\n                username: '',\n                password: '',\n                digicode: '',\n                status: 'success',\n                alertMessage: \"Sign in successful\",\n                loggedIn: true\n              });\n              this.props.userSignedIn(this.state.loggedIn, usernameToSend);\n              return;\n            }\n          }\n        }\n      }\n\n      this.setState({\n        username: '',\n        password: '',\n        digicode: ''\n      });\n    };\n\n    state = {\n      username: '',\n      password: '',\n      digicode: '',\n      alertMessage: '',\n      status: '',\n      loggedIn: false\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"sign-up\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Sign in to your account\", React.createElement(\"div\", {\n      className: \"signup-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(Card, {\n      fluid: true,\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Form, {\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, this.state.alertMessage !== '' && this.state.status === 'failed' ? React.createElement(Message, {\n      negative: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, this.state.alertMessage) : this.state.alertMessage !== '' && this.state.status === 'success' ? React.createElement(Message, {\n      positive: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, this.state.alertMessage) : console.log(''), React.createElement(Form.Field, {\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"username\",\n      value: this.state.username,\n      onChange: e => this.setState({\n        username: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    })), React.createElement(Form.Field, {\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"password\",\n      placeholder: \"password\",\n      value: this.state.password,\n      onChange: e => this.setState({\n        password: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    })), React.createElement(Form.Field, {\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"6 digit code\",\n      value: this.state.digicode,\n      autoComplete: \"digicode\",\n      onChange: e => this.setState({\n        digicode: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    })), React.createElement(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"submit\",\n      primary: true,\n      fluid: true,\n      size: \"large\",\n      onClick: this.onSignIn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Sign in\"))))), this.props.signedUp ? console.log() : React.createElement(\"div\", {\n      className: \"signin-onUp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"Don't have an account? \", React.createElement(Link, {\n      to: \"/sign-up\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"Sign up\"))));\n  }\n\n}\n\nexport default SignIn;","map":{"version":3,"sources":["D:/reactDAPP/client/src/components/SignIn.js"],"names":["React","Component","Link","Form","Button","Card","Message","AuthValidation","SignIn","constructor","props","onSignIn","state","username","password","digicode","trim","usernameToSend","length","setState","alertMessage","status","userAddress","contract","methods","getUserAddress","call","from","account","validated","web3","loggedIn","userSignedIn","render","console","log","e","target","value","signedUp"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button, Card, Message } from 'semantic-ui-react';\r\nimport AuthValidation from '../utils/AuthValidation';\r\nimport \"../App.css\";\r\n\r\nclass SignIn extends Component {\r\n\r\n        constructor(props) {\r\n            super(props);\r\n \r\n    state = {\r\n        username: '',\r\n        password: '',\r\n        digicode: '',\r\n        alertMessage: '',\r\n        status: '',\r\n        loggedIn: false\r\n    }\r\n}\r\n\r\n    onSignIn = async () => {\r\n\r\n        if (this.state.username !== '' && this.state.password !== '' && this.state.digicode !== '') {\r\n            let username = this.state.username.trim();\r\n            let password = this.state.password.trim();\r\n            let digicode = this.state.digicode.trim();\r\n\r\n            let usernameToSend = username;\r\n\r\n            //===\r\n            if (password.length < 8) {\r\n                this.setState({\r\n                    alertMessage: \"at least 8 characters for password\",\r\n                    status: 'failed',\r\n                    password: '',\r\n                    digicode: '',\r\n                });\r\n                return;\r\n            } else {\r\n\r\n            } if (digicode.length !== 6) {\r\n                this.setState({\r\n                    alertMessage: \"6 digit required for digicode\",\r\n                    status: 'failed',\r\n                    digicode: ''\r\n                });\r\n                return\r\n            } else {\r\n                let userAddress = await this.props.contract.methods.getUserAddress()\r\n                    .call({ from: this.props.account });\r\n\r\n                if (userAddress === '0x0000000000000000000000000000000000000000') {\r\n                    this.setState({\r\n                        alertMessage: 'Account does not exists',\r\n                        status: 'failed',\r\n                        username: '',\r\n                        password: '',\r\n                        digicode: '',\r\n                    });\r\n                    return;\r\n                } else {\r\n                    let validated = await\r\n                        AuthValidation(\r\n                            username,\r\n                            this.props.account,\r\n                            password, digicode,\r\n                            this.props.web3,\r\n                            this.props.contract\r\n                        );\r\n\r\n                    if (!validated) {\r\n                        this.setState({\r\n                            alertMessage: 'Incorrect log in',\r\n                            status: 'failed',\r\n                            username: '',\r\n                            password: '',\r\n                            digicode: '',\r\n                        });\r\n                        return\r\n                    } else {\r\n                        this.setState({\r\n                            username: '',\r\n                            password: '',\r\n                            digicode: '',\r\n                            status: 'success',\r\n                            alertMessage: \"Sign in successful\",\r\n                            loggedIn: true\r\n                        });\r\n\r\n                        this.props.userSignedIn(this.state.loggedIn, usernameToSend);\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        this.setState({\r\n            username: '',\r\n            password: '',\r\n            digicode: ''\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"sign-up\">\r\n                Sign in to your account\r\n                <div className='signup-form'>\r\n                    <Card fluid centered>\r\n                        <Card.Content>\r\n                            <Form size='large'>\r\n                                {\r\n                                    this.state.alertMessage !== '' && this.state.status === 'failed' ?\r\n                                        <Message negative>\r\n                                            {this.state.alertMessage}\r\n                                        </Message> :\r\n                                        this.state.alertMessage !== '' && this.state.status === 'success' ?\r\n                                            <Message positive>\r\n                                                {this.state.alertMessage}\r\n                                            </Message> :\r\n                                            console.log('')\r\n                                }\r\n                                <Form.Field required>\r\n                                    <input\r\n                                        type='text'\r\n                                        placeholder='username'\r\n                                        value={this.state.username}\r\n                            \r\n                                        onChange={e => this.setState({ username: e.target.value })}\r\n                                    />\r\n                                </Form.Field>\r\n                                <Form.Field required>\r\n                                    <input\r\n                                        type='password'\r\n                                        placeholder='password'\r\n                                        value={this.state.password}\r\n                        \r\n                                        onChange={e => this.setState({ password: e.target.value })}\r\n                                    />\r\n                                </Form.Field>\r\n                                <Form.Field required>\r\n                                    <input\r\n                                        type='text'\r\n                                        placeholder='6 digit code'\r\n                                        value={this.state.digicode}\r\n                                        autoComplete=\"digicode\"\r\n                                        onChange={e => this.setState({ digicode: e.target.value })}\r\n                                    />\r\n                                </Form.Field>\r\n                                <Form.Field>\r\n                                    <Button type='submit' primary fluid size='large' onClick={this.onSignIn}>\r\n                                        Sign in\r\n                                    </Button>\r\n                                </Form.Field>\r\n\r\n                            </Form>\r\n                        </Card.Content>\r\n                    </Card>\r\n                    {\r\n                        this.props.signedUp ?\r\n                            console.log() :\r\n                            <div className=\"signin-onUp\">\r\n                                Don't have an account? <Link to='/sign-up'>Sign up</Link>\r\n                            </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignIn\r\n"]},"metadata":{},"sourceType":"module"}